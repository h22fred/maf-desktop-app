<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Load the internationalization service -->
    <bean id="i18nPlugin" class="framework.services.configuration.I18nMessagesPluginImpl" init-method="init"/>

    <!-- User session management service -->
    <bean id="userSessionManagerPlugin" class="framework.services.session.CookieUserSessionManagerPlugin"/>

    <!-- Preference management service -->
    <bean id="preferenceManagerPlugin" class="framework.services.account.DefaultPreferenceManagementPlugin" />

    <!-- Personal storage service -->
    <bean id="personalStoragePlugin" class="framework.services.storage.PersonalStoragePluginImpl" init-method="init" destroy-method="destroy">
        <constructor-arg ref="accountManagerPlugin" />
    </bean>
    
    <!-- Shared storage service -->
    <bean id="sharedStorageService" class="framework.services.storage.SharedStorageServiceImpl">
        <constructor-arg value="${maf.sftp.store.root}" />
    </bean>
    
    <!-- AdPanel management service -->
    <bean id="adPanelService" class="framework.services.remote.AdPanelServiceImpl" init-method="init" destroy-method="destroy">
        <constructor-arg value="${maf.ad_panel.is_active}" />
        <constructor-arg value="${maf.ad_panel.url}" />
        <constructor-arg value="${maf.ad_panel.cache_ttl}" />
    </bean>
    
    <!-- Attachment manager service -->
    <bean id="attachmentPlugin" class="framework.services.storage.DefaultAttachmentManagerPlugin">
        <constructor-arg value="${maf.attachments.root}" />
    </bean>
    
    <!-- Agent system plugin management  -->
    <!-- The notification service -->
    <bean id="notificationManagerPlugin" class="framework.services.notification.DefaultNotificationManagerPlugin">
        <constructor-arg value="${maf.actor.notification.pool}" />
    </bean>
    
    <!-- Plugin management system -->
    <bean id="pluginManager" class="framework.services.plugins.PluginManagerServiceImpl"/>
    <!-- Extensions management system -->
    <bean id="extensionManagerService" class="framework.services.ext.ExtensionManagerServiceImpl" init-method="init" destroy-method="destroy">
       <constructor-arg value="${maf.ext.directory}" />
       <constructor-arg value="${maf.ext.auto.refresh.status}" />
       <constructor-arg value="${maf.ext.auto.refresh.frequency}" />
       <constructor-arg ref="pluginManager" />
       <constructor-arg ref="i18nPlugin" />
    </bean>
    
    <!-- The agent system -->
    <bean id="actorSystemPlugin" class="framework.services.actor.ActorSystemPluginImpl">
        <constructor-arg value="${maf.actor.system}" />
        <constructor-arg value="${maf.actor.deadletters.folder}" />
        <constructor-arg value="${maf.actor.deadletters.reprocessing.folder}" />
        <constructor-arg>
            <list>
                <ref bean="notificationManagerPlugin"/>
                <ref bean="pluginManager"/>
            </list>
        </constructor-arg>
    </bean>

    <!-- KPI service -->
    <bean id="kpiService" class="framework.services.kpi.KpiServiceImpl"></bean>
    
    <!-- jobs service -->
    <bean id="jobsService" class="framework.services.job.JobsServiceImpl"></bean>
    
    <!-- Custom Router service -->
    <bean id="customRouterService" class="framework.services.router.CustomRouterServiceImpl"></bean>
    <alias name="customRouterService" alias="customRouterNotificationService"/>
    
    <!-- API signature service -->
    <bean id="apiSignatureService" class="framework.services.api.server.ApiSignatureServiceImpl" init-method="init">
        <constructor-arg value="${maf.api.keys.length}" />
        <constructor-arg value="${maf.api.allowed.timediff}" />
        <constructor-arg value="${maf.api.hash.algoritm}" />
        <constructor-arg value="${maf.api.protocol.version}" />
        <constructor-arg value="${maf.public.url}" />
    </bean>
    
    <!-- Licenses management service -->
    <bean id="licensesManagementService" class="services.licensesmanagement.LicensesManagementServiceImpl" />
    

    <!-- Load the authentication configuration -->
    <beans profile="CAS_MASTER">
        <bean id="authenticationAccountReaderPlugin"
            class="framework.services.account.DefaultAuthenticationAccountReaderPlugin">
            <constructor-arg value="${maf.ldap_url}" />
            <constructor-arg value="${maf.user}" />
            <constructor-arg value="${maf.password}" />
            <constructor-arg value="${maf.user_searchbase}" />
            <constructor-arg value="${maf.user_searchfilter}" />
            <constructor-arg value="${maf.user_searchmailfilter}" />
            <constructor-arg value="${maf.user_searchcnfilter}" />
            <constructor-arg value="${maf.user_unique_id_attribute}" />
            <constructor-arg value="${maf.activation_ldap_attribute}" />
            <constructor-arg value="${maf.activation_ldap_attribute_activated}" />
        </bean>
        <bean id="authenticationAccountWriterPlugin"
            class="framework.services.account.DefaultAuthenticationAccountWriterPlugin">
            <constructor-arg value="${maf.ldap_url}" />
            <constructor-arg value="${maf.user}" />
            <constructor-arg value="${maf.password}" />
            <constructor-arg value="${maf.user_dn_template}" />
            <constructor-arg value="${maf.group_dn_template}" />
            <constructor-arg>
                <array value-type="java.lang.String">
                    <value>top</value>
                    <value>person</value>
                    <value>organizationalPerson</value>
                    <value>inetOrgPerson</value>
                </array>
            </constructor-arg>
            <constructor-arg value="${maf.activation_ldap_attribute}" />
            <constructor-arg value="${maf.activation_ldap_attribute_activated}" />
            <constructor-arg value="${maf.activation_ldap_attribute_locked}" />
        </bean>
        <bean id="accountManagerPlugin" class="framework.services.account.AccountManagerPluginImpl">
            <constructor-arg value="${maf.ic_ldap_master}" />
            <constructor-arg value="${maf.ic_self_mail_update_allowed}" />
            <constructor-arg value="${maf.user_account_cache_duration}" />
            <constructor-arg ref="authenticationAccountWriterPlugin" />
            <constructor-arg ref="authenticationAccountReaderPlugin" />
            <constructor-arg ref="pluginManager" />
            <constructor-arg value="${maf.validation.key.validity}" />
            <constructor-arg value="framework.services.account.DefaultUserAccount"/>
        </bean>
    </beans>
    
    <beans profile="CAS_SLAVE">
        <bean id="authenticationAccountReaderPlugin"
        class="framework.services.account.LightAuthenticationAccountReaderPlugin">
        </bean>
        <bean id="authenticationAccountWriterPlugin"
            class="framework.services.account.LightAuthenticationAccountWriterPlugin">
        </bean>
        <bean id="accountManagerPlugin" class="framework.services.account.AccountManagerPluginImpl">
            <constructor-arg value="false" />
            <constructor-arg value="${maf.ic_self_mail_update_allowed}" />
            <constructor-arg value="${maf.user_account_cache_duration}" />
            <constructor-arg ref="authenticationAccountWriterPlugin" />
            <constructor-arg ref="authenticationAccountReaderPlugin" />
            <constructor-arg ref="pluginManager" />
            <constructor-arg value="${maf.validation.key.validity}" />
            <constructor-arg value="framework.services.account.LightUserAccount"/>
        </bean>
    </beans>
    
    <beans profile="FEDERATED">
        <bean id="authenticationAccountReaderPlugin"
        class="framework.services.account.LightAuthenticationAccountReaderPlugin">
        </bean>
        <bean id="authenticationAccountWriterPlugin"
            class="framework.services.account.LightAuthenticationAccountWriterPlugin">
        </bean>
        <bean id="accountManagerPlugin" class="framework.services.account.AccountManagerPluginImpl">
            <constructor-arg value="false" />
            <constructor-arg value="${maf.ic_self_mail_update_allowed}" />
            <constructor-arg value="${maf.user_account_cache_duration}" />
            <constructor-arg ref="authenticationAccountWriterPlugin" />
            <constructor-arg ref="authenticationAccountReaderPlugin" />
            <constructor-arg ref="pluginManager" />
            <constructor-arg value="${maf.validation.key.validity}" />
            <constructor-arg value="framework.services.account.LightUserAccount"/>
        </bean>
    </beans>
    
    <beans profile="STANDALONE">
        <bean id="authenticationAccountReaderPlugin"
        class="framework.services.account.LightAuthenticationAccountReaderPlugin">
        </bean>
        <bean id="authenticationAccountWriterPlugin"
            class="framework.services.account.LightAuthenticationAccountWriterPlugin">
        </bean>
        <bean id="accountManagerPlugin" class="framework.services.account.AccountManagerPluginImpl">
            <constructor-arg value="${maf.ic_ldap_master}" />
            <constructor-arg value="${maf.ic_self_mail_update_allowed}" />
            <constructor-arg value="${maf.user_account_cache_duration}" />
            <constructor-arg ref="authenticationAccountWriterPlugin" />
            <constructor-arg ref="authenticationAccountReaderPlugin" />
            <constructor-arg ref="pluginManager" />
            <constructor-arg value="${maf.validation.key.validity}" />
            <constructor-arg value="framework.services.account.LightUserAccount"/>
        </bean>
    </beans>
</beans>